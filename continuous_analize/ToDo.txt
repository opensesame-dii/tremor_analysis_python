・初期化処理
[ ] tkinterの設定を呼ぶ
[o] windowの生成関数を呼ぶ
[o] YYYYMMDDhhmmを取得
    self.launched_str に格納
[o] data-YYYYMMDDhhmmのディレクトリを作る
    self.target_dir に絶対パスを格納
[ ] (公開時) self.target_dir を開発用のdata-devから日付のものに戻す

・ウィンドウ作成
[o] scan, runボタン作成
[o] scan結果表示部分作成
[o] progress 表示部分作成
[o] 解析対象のディレクトリ名(data-YYYYMMDDhhmm) 表示部分作成

・scanの処理
[o] scanボタン押下時のファイル一覧を取得
[o] 取得したら, それをもとにエラーがないか判定
[ ] csv, xlsx以外のファイルをカウント対象から除外
[o] エラーがあったら警告を表示する
[o] エラーがあったらメッセージボックスに追加する
[o] scanを押したら過去のscan結果を消す
[o] エラーがなかったらファイルの一覧を表示する

・runの処理
[o] progressの表示を更新
[o] ファイルをペアで読み込む
[o] Spectrogram解析
[o] Spectral Amplitude解析
[o] 解析結果の数値を辞書型で格納
[ ] グラフを書くのに使う値をfigureから配列にする
[ ] 画像生成関数を呼ぶ
[ ] csv関数を呼ぶ
[o] 繰り返しの処理
[o] 終了のポップアップ表示


・画像生成
[ ] 画面を分割
[ ] previewのグラフをかく
[ ] 解析結果のグラフをかく
[ ] 数値をかく
[ ] ファイル出力 savefig() 保存名 os.path.join(self.target_dir, d, "filename.png")

 |  0   | 1  | 2 | 3  |
------------------------
0 | 結果 |  プレビュー |
---      ---------------
1 | 結果 |   ノルム    |
---      ---------------
2 | 結果 | x  | y | z  |
------------------------

・csv作成
[ ] 見出しを作る
[ ] 値をかく
[ ] ファイル出力
